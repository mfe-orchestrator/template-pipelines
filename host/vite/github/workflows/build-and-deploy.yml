name: 🚀 Build and deploy

on:
  push:
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: 'Version to release'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    
    - name: 🔄 Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    
    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23.11.1'
        cache: 'pnpm'
        cache-dependency-path: '**/pnpm-lock.yaml'
    
    - name: 💾 Cache pnpm store
      uses: actions/cache@v3
      id: pnpm-cache
      with:
        path: |
          ~/.pnpm-store
          ~/.local/share/pnpm/store
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          node_modules
          host/node_modules
          remote/node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-deps-
    
    - name: 🔧 Install Dependencies
      run: pnpm install
      if: steps.cache-deps.outputs.cache-hit != 'true'
        
    - name: 🏗️ Build
      run: pnpm build

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🏷️ Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: 🚢 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

